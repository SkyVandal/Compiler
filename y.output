   0  $accept : file $end

   1  file : program
   2       | module

   3  program : PROGRAM declarations START body END

   4  module : MODULE declarations END

   5  declarations :
   6               | declarations ';' declaration
   7               | declaration

   8  declaration : function
   9              | qualificator variable
  10              | qualificator CONST variable
  11              | qualificator variable ASSIGN literals literalscomma
  12              | qualificator CONST variable ASSIGN literals literalscomma

  13  $$1 :

  14  function : FUNCTION qualificator type IDENTIFIER $$1 variables ddone

  15  $$2 :

  16  function : FUNCTION qualificator type IDENTIFIER $$2 ddone

  17  $$3 :

  18  function : FUNCTION qualificator VOID IDENTIFIER $$3 variables ddone

  19  $$4 :

  20  function : FUNCTION qualificator VOID IDENTIFIER $$4 ddone

  21  ddone : DONE
  22        | DO body

  23  variable : type IDENTIFIER
  24           | type IDENTIFIER '[' INTEGER ']'

  25  variables : variable
  26            | variables ';' variable

  27  bodyvariables :
  28                | bodyvariables variable ';'

  29  type : NUMBER
  30       | STRING
  31       | ARRAY

  32  qualificator :
  33               | PUBLIC
  34               | FORWARD

  35  body : bodyvariables instructions instructionfinal

  36  literal : INTEGER
  37          | CHAR
  38          | CCHAR

  39  literals : literal
  40           | literals literal

  41  literalscomma :
  42                | literalscomma ',' literal

  43  instructions :
  44               | instructions instructioninit

  45  instructioninit : IF expression THEN instructions instructionfinal elifexp elseexp FI
  46                  | FOR expression UNTIL expression STEP expression DO instructions instructionfinal DONE
  47                  | expression ';'
  48                  | expression '!'
  49                  | lvalue '#' expression ';'

  50  instructionfinal :
  51                   | REPEAT
  52                   | STOP
  53                   | RETURN
  54                   | RETURN expression

  55  elifexp :
  56          | elifexp ELIF expression THEN instructions instructionfinal

  57  elseexp :
  58          | ELSE instructions instructionfinal

  59  expression : lvalue
  60             | literals
  61             | '(' expression ')'
  62             | '?'
  63             | invocation
  64             | '-' expression
  65             | expression '^' expression
  66             | expression '*' expression
  67             | expression '/' expression
  68             | expression '%' expression
  69             | expression '+' expression
  70             | expression '-' expression
  71             | expression '<' expression
  72             | expression '>' expression
  73             | expression GE expression
  74             | expression LE expression
  75             | expression NE expression
  76             | expression '=' expression
  77             | '~' expression
  78             | expression '&' expression
  79             | expression '|' expression
  80             | lvalue ASSIGN expression

  81  invocation : expression '(' args ')'

  82  lvalue : IDENTIFIER
  83         | lvalue '[' expression ']'
  84         | '&' lvalue

  85  args : expression
  86       | args ',' expression

state 0
	$accept : . file $end  (0)

	PROGRAM  shift 1
	MODULE  shift 2
	.  error

	file  goto 3
	program  goto 4
	module  goto 5


state 1
	program : PROGRAM . declarations START body END  (3)
	declarations : .  (5)
	qualificator : .  (32)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	START  reduce 5
	CONST  reduce 32
	NUMBER  reduce 32
	ARRAY  reduce 32
	STRING  reduce 32
	';'  reduce 5

	declarations  goto 9
	declaration  goto 10
	qualificator  goto 11
	function  goto 12


state 2
	module : MODULE . declarations END  (4)
	declarations : .  (5)
	qualificator : .  (32)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	END  reduce 5
	CONST  reduce 32
	NUMBER  reduce 32
	ARRAY  reduce 32
	STRING  reduce 32
	';'  reduce 5

	declarations  goto 13
	declaration  goto 10
	qualificator  goto 11
	function  goto 12


state 3
	$accept : file . $end  (0)

	$end  accept


state 4
	file : program .  (1)

	.  reduce 1


state 5
	file : module .  (2)

	.  reduce 2


state 6
	function : FUNCTION . qualificator type IDENTIFIER $$1 variables ddone  (14)
	function : FUNCTION . qualificator type IDENTIFIER $$2 ddone  (16)
	function : FUNCTION . qualificator VOID IDENTIFIER $$3 variables ddone  (18)
	function : FUNCTION . qualificator VOID IDENTIFIER $$4 ddone  (20)
	qualificator : .  (32)

	PUBLIC  shift 7
	FORWARD  shift 8
	VOID  reduce 32
	NUMBER  reduce 32
	ARRAY  reduce 32
	STRING  reduce 32

	qualificator  goto 14


state 7
	qualificator : PUBLIC .  (33)

	.  reduce 33


state 8
	qualificator : FORWARD .  (34)

	.  reduce 34


state 9
	program : PROGRAM declarations . START body END  (3)
	declarations : declarations . ';' declaration  (6)

	START  shift 15
	';'  shift 16
	.  error


state 10
	declarations : declaration .  (7)

	.  reduce 7


state 11
	declaration : qualificator . variable  (9)
	declaration : qualificator . CONST variable  (10)
	declaration : qualificator . variable ASSIGN literals literalscomma  (11)
	declaration : qualificator . CONST variable ASSIGN literals literalscomma  (12)

	CONST  shift 17
	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	.  error

	variable  goto 21
	type  goto 22


state 12
	declaration : function .  (8)

	.  reduce 8


state 13
	module : MODULE declarations . END  (4)
	declarations : declarations . ';' declaration  (6)

	END  shift 23
	';'  shift 16
	.  error


state 14
	function : FUNCTION qualificator . type IDENTIFIER $$1 variables ddone  (14)
	function : FUNCTION qualificator . type IDENTIFIER $$2 ddone  (16)
	function : FUNCTION qualificator . VOID IDENTIFIER $$3 variables ddone  (18)
	function : FUNCTION qualificator . VOID IDENTIFIER $$4 ddone  (20)

	VOID  shift 24
	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	.  error

	type  goto 25


state 15
	program : PROGRAM declarations START . body END  (3)
	bodyvariables : .  (27)

	.  reduce 27

	body  goto 26
	bodyvariables  goto 27


state 16
	declarations : declarations ';' . declaration  (6)
	qualificator : .  (32)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	CONST  reduce 32
	NUMBER  reduce 32
	ARRAY  reduce 32
	STRING  reduce 32

	declaration  goto 28
	qualificator  goto 11
	function  goto 12


state 17
	declaration : qualificator CONST . variable  (10)
	declaration : qualificator CONST . variable ASSIGN literals literalscomma  (12)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	.  error

	variable  goto 29
	type  goto 22


state 18
	type : NUMBER .  (29)

	.  reduce 29


state 19
	type : ARRAY .  (31)

	.  reduce 31


state 20
	type : STRING .  (30)

	.  reduce 30


state 21
	declaration : qualificator variable .  (9)
	declaration : qualificator variable . ASSIGN literals literalscomma  (11)

	ASSIGN  shift 30
	START  reduce 9
	END  reduce 9
	';'  reduce 9


state 22
	variable : type . IDENTIFIER  (23)
	variable : type . IDENTIFIER '[' INTEGER ']'  (24)

	IDENTIFIER  shift 31
	.  error


state 23
	module : MODULE declarations END .  (4)

	.  reduce 4


state 24
	function : FUNCTION qualificator VOID . IDENTIFIER $$3 variables ddone  (18)
	function : FUNCTION qualificator VOID . IDENTIFIER $$4 ddone  (20)

	IDENTIFIER  shift 32
	.  error


state 25
	function : FUNCTION qualificator type . IDENTIFIER $$1 variables ddone  (14)
	function : FUNCTION qualificator type . IDENTIFIER $$2 ddone  (16)

	IDENTIFIER  shift 33
	.  error


state 26
	program : PROGRAM declarations START body . END  (3)

	END  shift 34
	.  error


state 27
	bodyvariables : bodyvariables . variable ';'  (28)
	body : bodyvariables . instructions instructionfinal  (35)
	instructions : .  (43)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	INTEGER  reduce 43
	CHAR  reduce 43
	IDENTIFIER  reduce 43
	CCHAR  reduce 43
	START  reduce 43
	END  reduce 43
	IF  reduce 43
	FOR  reduce 43
	REPEAT  reduce 43
	STOP  reduce 43
	RETURN  reduce 43
	'('  reduce 43
	'?'  reduce 43
	'-'  reduce 43
	'~'  reduce 43
	'&'  reduce 43
	';'  reduce 43

	variable  goto 35
	type  goto 22
	instructions  goto 36


state 28
	declarations : declarations ';' declaration .  (6)

	.  reduce 6


state 29
	declaration : qualificator CONST variable .  (10)
	declaration : qualificator CONST variable . ASSIGN literals literalscomma  (12)

	ASSIGN  shift 37
	START  reduce 10
	END  reduce 10
	';'  reduce 10


state 30
	declaration : qualificator variable ASSIGN . literals literalscomma  (11)

	INTEGER  shift 38
	CHAR  shift 39
	CCHAR  shift 40
	.  error

	literal  goto 41
	literals  goto 42


state 31
	variable : type IDENTIFIER .  (23)
	variable : type IDENTIFIER . '[' INTEGER ']'  (24)

	'['  shift 43
	START  reduce 23
	END  reduce 23
	DO  reduce 23
	DONE  reduce 23
	ASSIGN  reduce 23
	';'  reduce 23


state 32
	function : FUNCTION qualificator VOID IDENTIFIER . $$3 variables ddone  (18)
	function : FUNCTION qualificator VOID IDENTIFIER . $$4 ddone  (20)
	$$3 : .  (17)
	$$4 : .  (19)

	NUMBER  reduce 17
	ARRAY  reduce 17
	STRING  reduce 17
	DO  reduce 19
	DONE  reduce 19

	$$3  goto 44
	$$4  goto 45


state 33
	function : FUNCTION qualificator type IDENTIFIER . $$1 variables ddone  (14)
	function : FUNCTION qualificator type IDENTIFIER . $$2 ddone  (16)
	$$1 : .  (13)
	$$2 : .  (15)

	NUMBER  reduce 13
	ARRAY  reduce 13
	STRING  reduce 13
	DO  reduce 15
	DONE  reduce 15

	$$1  goto 46
	$$2  goto 47


state 34
	program : PROGRAM declarations START body END .  (3)

	.  reduce 3


state 35
	bodyvariables : bodyvariables variable . ';'  (28)

	';'  shift 48
	.  error


state 36
	body : bodyvariables instructions . instructionfinal  (35)
	instructions : instructions . instructioninit  (44)
	instructionfinal : .  (50)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	IF  shift 50
	FOR  shift 51
	REPEAT  shift 52
	STOP  shift 53
	RETURN  shift 54
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	START  reduce 50
	END  reduce 50
	';'  reduce 50

	literal  goto 41
	literals  goto 60
	instructioninit  goto 61
	instructionfinal  goto 62
	expression  goto 63
	lvalue  goto 64
	invocation  goto 65


state 37
	declaration : qualificator CONST variable ASSIGN . literals literalscomma  (12)

	INTEGER  shift 38
	CHAR  shift 39
	CCHAR  shift 40
	.  error

	literal  goto 41
	literals  goto 66


state 38
	literal : INTEGER .  (36)

	.  reduce 36


state 39
	literal : CHAR .  (37)

	.  reduce 37


state 40
	literal : CCHAR .  (38)

	.  reduce 38


state 41
	literals : literal .  (39)

	.  reduce 39


state 42
	declaration : qualificator variable ASSIGN literals . literalscomma  (11)
	literals : literals . literal  (40)
	literalscomma : .  (41)

	INTEGER  shift 38
	CHAR  shift 39
	CCHAR  shift 40
	START  reduce 41
	END  reduce 41
	';'  reduce 41
	','  reduce 41

	literal  goto 67
	literalscomma  goto 68


state 43
	variable : type IDENTIFIER '[' . INTEGER ']'  (24)

	INTEGER  shift 69
	.  error


state 44
	function : FUNCTION qualificator VOID IDENTIFIER $$3 . variables ddone  (18)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	.  error

	variable  goto 70
	type  goto 22
	variables  goto 71


state 45
	function : FUNCTION qualificator VOID IDENTIFIER $$4 . ddone  (20)

	DO  shift 72
	DONE  shift 73
	.  error

	ddone  goto 74


state 46
	function : FUNCTION qualificator type IDENTIFIER $$1 . variables ddone  (14)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	.  error

	variable  goto 70
	type  goto 22
	variables  goto 75


state 47
	function : FUNCTION qualificator type IDENTIFIER $$2 . ddone  (16)

	DO  shift 72
	DONE  shift 73
	.  error

	ddone  goto 76


state 48
	bodyvariables : bodyvariables variable ';' .  (28)

	.  reduce 28


state 49
	lvalue : IDENTIFIER .  (82)

	.  reduce 82


state 50
	instructioninit : IF . expression THEN instructions instructionfinal elifexp elseexp FI  (45)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 77
	lvalue  goto 78
	invocation  goto 65


state 51
	instructioninit : FOR . expression UNTIL expression STEP expression DO instructions instructionfinal DONE  (46)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 79
	lvalue  goto 78
	invocation  goto 65


state 52
	instructionfinal : REPEAT .  (51)

	.  reduce 51


state 53
	instructionfinal : STOP .  (52)

	.  reduce 52


state 54
	instructionfinal : RETURN .  (53)
	instructionfinal : RETURN . expression  (54)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	START  reduce 53
	END  reduce 53
	ELSE  reduce 53
	ELIF  reduce 53
	FI  reduce 53
	DONE  reduce 53
	';'  reduce 53

	literal  goto 41
	literals  goto 60
	expression  goto 80
	lvalue  goto 78
	invocation  goto 65


state 55
	expression : '(' . expression ')'  (61)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 81
	lvalue  goto 78
	invocation  goto 65


state 56
	expression : '?' .  (62)

	.  reduce 62


state 57
	expression : '-' . expression  (64)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 82
	lvalue  goto 78
	invocation  goto 65


state 58
	expression : '~' . expression  (77)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 83
	lvalue  goto 78
	invocation  goto 65


state 59
	lvalue : '&' . lvalue  (84)

	IDENTIFIER  shift 49
	'&'  shift 59
	.  error

	lvalue  goto 84


state 60
	literals : literals . literal  (40)
	expression : literals .  (60)

	INTEGER  shift 38
	CHAR  shift 39
	CCHAR  shift 40
	START  reduce 60
	END  reduce 60
	THEN  reduce 60
	ELSE  reduce 60
	ELIF  reduce 60
	FI  reduce 60
	UNTIL  reduce 60
	STEP  reduce 60
	DO  reduce 60
	DONE  reduce 60
	']'  reduce 60
	'('  reduce 60
	')'  reduce 60
	'^'  reduce 60
	'*'  reduce 60
	'/'  reduce 60
	'%'  reduce 60
	'+'  reduce 60
	'-'  reduce 60
	'<'  reduce 60
	'>'  reduce 60
	LE  reduce 60
	GE  reduce 60
	NE  reduce 60
	'='  reduce 60
	'&'  reduce 60
	'|'  reduce 60
	';'  reduce 60
	','  reduce 60
	'!'  reduce 60

	literal  goto 67


state 61
	instructions : instructions instructioninit .  (44)

	.  reduce 44


state 62
	body : bodyvariables instructions instructionfinal .  (35)

	.  reduce 35


state 63
	instructioninit : expression . ';'  (47)
	instructioninit : expression . '!'  (48)
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'('  shift 85
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	';'  shift 100
	'!'  shift 101
	.  error


state 64
	instructioninit : lvalue . '#' expression ';'  (49)
	expression : lvalue .  (59)
	expression : lvalue . ASSIGN expression  (80)
	lvalue : lvalue . '[' expression ']'  (83)

	'['  shift 102
	ASSIGN  shift 103
	'#'  shift 104
	'('  reduce 59
	'^'  reduce 59
	'*'  reduce 59
	'/'  reduce 59
	'%'  reduce 59
	'+'  reduce 59
	'-'  reduce 59
	'<'  reduce 59
	'>'  reduce 59
	LE  reduce 59
	GE  reduce 59
	NE  reduce 59
	'='  reduce 59
	'&'  reduce 59
	'|'  reduce 59
	';'  reduce 59
	'!'  reduce 59


state 65
	expression : invocation .  (63)

	.  reduce 63


state 66
	declaration : qualificator CONST variable ASSIGN literals . literalscomma  (12)
	literals : literals . literal  (40)
	literalscomma : .  (41)

	INTEGER  shift 38
	CHAR  shift 39
	CCHAR  shift 40
	START  reduce 41
	END  reduce 41
	';'  reduce 41
	','  reduce 41

	literal  goto 67
	literalscomma  goto 105


state 67
	literals : literals literal .  (40)

	.  reduce 40


state 68
	declaration : qualificator variable ASSIGN literals literalscomma .  (11)
	literalscomma : literalscomma . ',' literal  (42)

	','  shift 106
	START  reduce 11
	END  reduce 11
	';'  reduce 11


state 69
	variable : type IDENTIFIER '[' INTEGER . ']'  (24)

	']'  shift 107
	.  error


state 70
	variables : variable .  (25)

	.  reduce 25


state 71
	function : FUNCTION qualificator VOID IDENTIFIER $$3 variables . ddone  (18)
	variables : variables . ';' variable  (26)

	DO  shift 72
	DONE  shift 73
	';'  shift 108
	.  error

	ddone  goto 109


state 72
	ddone : DO . body  (22)
	bodyvariables : .  (27)

	.  reduce 27

	body  goto 110
	bodyvariables  goto 27


state 73
	ddone : DONE .  (21)

	.  reduce 21


state 74
	function : FUNCTION qualificator VOID IDENTIFIER $$4 ddone .  (20)

	.  reduce 20


state 75
	function : FUNCTION qualificator type IDENTIFIER $$1 variables . ddone  (14)
	variables : variables . ';' variable  (26)

	DO  shift 72
	DONE  shift 73
	';'  shift 108
	.  error

	ddone  goto 111


state 76
	function : FUNCTION qualificator type IDENTIFIER $$2 ddone .  (16)

	.  reduce 16


state 77
	instructioninit : IF expression . THEN instructions instructionfinal elifexp elseexp FI  (45)
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	THEN  shift 112
	'('  shift 85
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	.  error


state 78
	expression : lvalue .  (59)
	expression : lvalue . ASSIGN expression  (80)
	lvalue : lvalue . '[' expression ']'  (83)

	'['  shift 102
	ASSIGN  shift 103
	START  reduce 59
	END  reduce 59
	THEN  reduce 59
	ELSE  reduce 59
	ELIF  reduce 59
	FI  reduce 59
	UNTIL  reduce 59
	STEP  reduce 59
	DO  reduce 59
	DONE  reduce 59
	']'  reduce 59
	'('  reduce 59
	')'  reduce 59
	'^'  reduce 59
	'*'  reduce 59
	'/'  reduce 59
	'%'  reduce 59
	'+'  reduce 59
	'-'  reduce 59
	'<'  reduce 59
	'>'  reduce 59
	LE  reduce 59
	GE  reduce 59
	NE  reduce 59
	'='  reduce 59
	'&'  reduce 59
	'|'  reduce 59
	';'  reduce 59
	','  reduce 59
	'!'  reduce 59


state 79
	instructioninit : FOR expression . UNTIL expression STEP expression DO instructions instructionfinal DONE  (46)
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	UNTIL  shift 113
	'('  shift 85
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	.  error


state 80
	instructionfinal : RETURN expression .  (54)
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'('  shift 85
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 54
	END  reduce 54
	ELSE  reduce 54
	ELIF  reduce 54
	FI  reduce 54
	DONE  reduce 54
	';'  reduce 54


state 81
	expression : '(' expression . ')'  (61)
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'('  shift 85
	')'  shift 114
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	.  error


state 82
	expression : '-' expression .  (64)
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 64
	END  reduce 64
	THEN  reduce 64
	ELSE  reduce 64
	ELIF  reduce 64
	FI  reduce 64
	UNTIL  reduce 64
	STEP  reduce 64
	DO  reduce 64
	DONE  reduce 64
	']'  reduce 64
	'('  reduce 64
	')'  reduce 64
	';'  reduce 64
	','  reduce 64
	'!'  reduce 64


state 83
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : '~' expression .  (77)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'&'  shift 98
	'|'  shift 99
	START  reduce 77
	END  reduce 77
	THEN  reduce 77
	ELSE  reduce 77
	ELIF  reduce 77
	FI  reduce 77
	UNTIL  reduce 77
	STEP  reduce 77
	DO  reduce 77
	DONE  reduce 77
	']'  reduce 77
	'('  reduce 77
	')'  reduce 77
	'^'  reduce 77
	'*'  reduce 77
	'/'  reduce 77
	'%'  reduce 77
	'+'  reduce 77
	'-'  reduce 77
	'<'  reduce 77
	'>'  reduce 77
	LE  reduce 77
	GE  reduce 77
	NE  reduce 77
	'='  reduce 77
	';'  reduce 77
	','  reduce 77
	'!'  reduce 77


84: shift/reduce conflict (shift 102, reduce 84) on '['
state 84
	lvalue : lvalue . '[' expression ']'  (83)
	lvalue : '&' lvalue .  (84)

	'['  shift 102
	START  reduce 84
	END  reduce 84
	THEN  reduce 84
	ELSE  reduce 84
	ELIF  reduce 84
	FI  reduce 84
	UNTIL  reduce 84
	STEP  reduce 84
	DO  reduce 84
	DONE  reduce 84
	']'  reduce 84
	'('  reduce 84
	')'  reduce 84
	'^'  reduce 84
	'*'  reduce 84
	'/'  reduce 84
	'%'  reduce 84
	'+'  reduce 84
	'-'  reduce 84
	'<'  reduce 84
	'>'  reduce 84
	LE  reduce 84
	GE  reduce 84
	NE  reduce 84
	'='  reduce 84
	'&'  reduce 84
	'|'  reduce 84
	ASSIGN  reduce 84
	';'  reduce 84
	','  reduce 84
	'!'  reduce 84
	'#'  reduce 84


state 85
	invocation : expression '(' . args ')'  (81)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 115
	lvalue  goto 78
	invocation  goto 65
	args  goto 116


state 86
	expression : expression '^' . expression  (65)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 117
	lvalue  goto 78
	invocation  goto 65


state 87
	expression : expression '*' . expression  (66)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 118
	lvalue  goto 78
	invocation  goto 65


state 88
	expression : expression '/' . expression  (67)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 119
	lvalue  goto 78
	invocation  goto 65


state 89
	expression : expression '%' . expression  (68)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 120
	lvalue  goto 78
	invocation  goto 65


state 90
	expression : expression '+' . expression  (69)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 121
	lvalue  goto 78
	invocation  goto 65


state 91
	expression : expression '-' . expression  (70)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 122
	lvalue  goto 78
	invocation  goto 65


state 92
	expression : expression '<' . expression  (71)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 123
	lvalue  goto 78
	invocation  goto 65


state 93
	expression : expression '>' . expression  (72)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 124
	lvalue  goto 78
	invocation  goto 65


state 94
	expression : expression LE . expression  (74)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 125
	lvalue  goto 78
	invocation  goto 65


state 95
	expression : expression GE . expression  (73)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 126
	lvalue  goto 78
	invocation  goto 65


state 96
	expression : expression NE . expression  (75)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 127
	lvalue  goto 78
	invocation  goto 65


state 97
	expression : expression '=' . expression  (76)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 128
	lvalue  goto 78
	invocation  goto 65


state 98
	expression : expression '&' . expression  (78)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 129
	lvalue  goto 78
	invocation  goto 65


state 99
	expression : expression '|' . expression  (79)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 130
	lvalue  goto 78
	invocation  goto 65


state 100
	instructioninit : expression ';' .  (47)

	.  reduce 47


state 101
	instructioninit : expression '!' .  (48)

	.  reduce 48


state 102
	lvalue : lvalue '[' . expression ']'  (83)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 131
	lvalue  goto 78
	invocation  goto 65


state 103
	expression : lvalue ASSIGN . expression  (80)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 132
	lvalue  goto 78
	invocation  goto 65


state 104
	instructioninit : lvalue '#' . expression ';'  (49)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 133
	lvalue  goto 78
	invocation  goto 65


state 105
	declaration : qualificator CONST variable ASSIGN literals literalscomma .  (12)
	literalscomma : literalscomma . ',' literal  (42)

	','  shift 106
	START  reduce 12
	END  reduce 12
	';'  reduce 12


state 106
	literalscomma : literalscomma ',' . literal  (42)

	INTEGER  shift 38
	CHAR  shift 39
	CCHAR  shift 40
	.  error

	literal  goto 134


state 107
	variable : type IDENTIFIER '[' INTEGER ']' .  (24)

	.  reduce 24


state 108
	variables : variables ';' . variable  (26)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	.  error

	variable  goto 135
	type  goto 22


state 109
	function : FUNCTION qualificator VOID IDENTIFIER $$3 variables ddone .  (18)

	.  reduce 18


state 110
	ddone : DO body .  (22)

	.  reduce 22


state 111
	function : FUNCTION qualificator type IDENTIFIER $$1 variables ddone .  (14)

	.  reduce 14


state 112
	instructioninit : IF expression THEN . instructions instructionfinal elifexp elseexp FI  (45)
	instructions : .  (43)

	.  reduce 43

	instructions  goto 136


state 113
	instructioninit : FOR expression UNTIL . expression STEP expression DO instructions instructionfinal DONE  (46)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 137
	lvalue  goto 78
	invocation  goto 65


state 114
	expression : '(' expression ')' .  (61)

	.  reduce 61


state 115
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)
	args : expression .  (85)

	'('  shift 85
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	')'  reduce 85
	','  reduce 85


state 116
	invocation : expression '(' args . ')'  (81)
	args : args . ',' expression  (86)

	')'  shift 138
	','  shift 139
	.  error


state 117
	expression : expression . '^' expression  (65)
	expression : expression '^' expression .  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 65
	END  reduce 65
	THEN  reduce 65
	ELSE  reduce 65
	ELIF  reduce 65
	FI  reduce 65
	UNTIL  reduce 65
	STEP  reduce 65
	DO  reduce 65
	DONE  reduce 65
	']'  reduce 65
	'('  reduce 65
	')'  reduce 65
	';'  reduce 65
	','  reduce 65
	'!'  reduce 65


state 118
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression '*' expression .  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 66
	END  reduce 66
	THEN  reduce 66
	ELSE  reduce 66
	ELIF  reduce 66
	FI  reduce 66
	UNTIL  reduce 66
	STEP  reduce 66
	DO  reduce 66
	DONE  reduce 66
	']'  reduce 66
	'('  reduce 66
	')'  reduce 66
	'^'  reduce 66
	'*'  reduce 66
	'/'  reduce 66
	'%'  reduce 66
	';'  reduce 66
	','  reduce 66
	'!'  reduce 66


state 119
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression '/' expression .  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 67
	END  reduce 67
	THEN  reduce 67
	ELSE  reduce 67
	ELIF  reduce 67
	FI  reduce 67
	UNTIL  reduce 67
	STEP  reduce 67
	DO  reduce 67
	DONE  reduce 67
	']'  reduce 67
	'('  reduce 67
	')'  reduce 67
	'^'  reduce 67
	'*'  reduce 67
	'/'  reduce 67
	'%'  reduce 67
	';'  reduce 67
	','  reduce 67
	'!'  reduce 67


state 120
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression '%' expression .  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 68
	END  reduce 68
	THEN  reduce 68
	ELSE  reduce 68
	ELIF  reduce 68
	FI  reduce 68
	UNTIL  reduce 68
	STEP  reduce 68
	DO  reduce 68
	DONE  reduce 68
	']'  reduce 68
	'('  reduce 68
	')'  reduce 68
	'^'  reduce 68
	'*'  reduce 68
	'/'  reduce 68
	'%'  reduce 68
	';'  reduce 68
	','  reduce 68
	'!'  reduce 68


state 121
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression '+' expression .  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 69
	END  reduce 69
	THEN  reduce 69
	ELSE  reduce 69
	ELIF  reduce 69
	FI  reduce 69
	UNTIL  reduce 69
	STEP  reduce 69
	DO  reduce 69
	DONE  reduce 69
	']'  reduce 69
	'('  reduce 69
	')'  reduce 69
	'^'  reduce 69
	'*'  reduce 69
	'/'  reduce 69
	'%'  reduce 69
	'+'  reduce 69
	'-'  reduce 69
	';'  reduce 69
	','  reduce 69
	'!'  reduce 69


state 122
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression '-' expression .  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 70
	END  reduce 70
	THEN  reduce 70
	ELSE  reduce 70
	ELIF  reduce 70
	FI  reduce 70
	UNTIL  reduce 70
	STEP  reduce 70
	DO  reduce 70
	DONE  reduce 70
	']'  reduce 70
	'('  reduce 70
	')'  reduce 70
	'^'  reduce 70
	'*'  reduce 70
	'/'  reduce 70
	'%'  reduce 70
	'+'  reduce 70
	'-'  reduce 70
	';'  reduce 70
	','  reduce 70
	'!'  reduce 70


state 123
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression '<' expression .  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 71
	END  reduce 71
	THEN  reduce 71
	ELSE  reduce 71
	ELIF  reduce 71
	FI  reduce 71
	UNTIL  reduce 71
	STEP  reduce 71
	DO  reduce 71
	DONE  reduce 71
	']'  reduce 71
	'('  reduce 71
	')'  reduce 71
	'^'  reduce 71
	'*'  reduce 71
	'/'  reduce 71
	'%'  reduce 71
	'+'  reduce 71
	'-'  reduce 71
	'<'  reduce 71
	'>'  reduce 71
	LE  reduce 71
	GE  reduce 71
	';'  reduce 71
	','  reduce 71
	'!'  reduce 71


state 124
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression '>' expression .  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 72
	END  reduce 72
	THEN  reduce 72
	ELSE  reduce 72
	ELIF  reduce 72
	FI  reduce 72
	UNTIL  reduce 72
	STEP  reduce 72
	DO  reduce 72
	DONE  reduce 72
	']'  reduce 72
	'('  reduce 72
	')'  reduce 72
	'^'  reduce 72
	'*'  reduce 72
	'/'  reduce 72
	'%'  reduce 72
	'+'  reduce 72
	'-'  reduce 72
	'<'  reduce 72
	'>'  reduce 72
	LE  reduce 72
	GE  reduce 72
	';'  reduce 72
	','  reduce 72
	'!'  reduce 72


state 125
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression LE expression .  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 74
	END  reduce 74
	THEN  reduce 74
	ELSE  reduce 74
	ELIF  reduce 74
	FI  reduce 74
	UNTIL  reduce 74
	STEP  reduce 74
	DO  reduce 74
	DONE  reduce 74
	']'  reduce 74
	'('  reduce 74
	')'  reduce 74
	'^'  reduce 74
	'*'  reduce 74
	'/'  reduce 74
	'%'  reduce 74
	'+'  reduce 74
	'-'  reduce 74
	'<'  reduce 74
	'>'  reduce 74
	LE  reduce 74
	GE  reduce 74
	';'  reduce 74
	','  reduce 74
	'!'  reduce 74


state 126
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression GE expression .  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	START  reduce 73
	END  reduce 73
	THEN  reduce 73
	ELSE  reduce 73
	ELIF  reduce 73
	FI  reduce 73
	UNTIL  reduce 73
	STEP  reduce 73
	DO  reduce 73
	DONE  reduce 73
	']'  reduce 73
	'('  reduce 73
	')'  reduce 73
	'^'  reduce 73
	'*'  reduce 73
	'/'  reduce 73
	'%'  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	'<'  reduce 73
	'>'  reduce 73
	LE  reduce 73
	GE  reduce 73
	';'  reduce 73
	','  reduce 73
	'!'  reduce 73


state 127
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression NE expression .  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'&'  shift 98
	'|'  shift 99
	START  reduce 75
	END  reduce 75
	THEN  reduce 75
	ELSE  reduce 75
	ELIF  reduce 75
	FI  reduce 75
	UNTIL  reduce 75
	STEP  reduce 75
	DO  reduce 75
	DONE  reduce 75
	']'  reduce 75
	'('  reduce 75
	')'  reduce 75
	'^'  reduce 75
	'*'  reduce 75
	'/'  reduce 75
	'%'  reduce 75
	'+'  reduce 75
	'-'  reduce 75
	'<'  reduce 75
	'>'  reduce 75
	LE  reduce 75
	GE  reduce 75
	NE  reduce 75
	'='  reduce 75
	';'  reduce 75
	','  reduce 75
	'!'  reduce 75


state 128
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression '=' expression .  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'&'  shift 98
	'|'  shift 99
	START  reduce 76
	END  reduce 76
	THEN  reduce 76
	ELSE  reduce 76
	ELIF  reduce 76
	FI  reduce 76
	UNTIL  reduce 76
	STEP  reduce 76
	DO  reduce 76
	DONE  reduce 76
	']'  reduce 76
	'('  reduce 76
	')'  reduce 76
	'^'  reduce 76
	'*'  reduce 76
	'/'  reduce 76
	'%'  reduce 76
	'+'  reduce 76
	'-'  reduce 76
	'<'  reduce 76
	'>'  reduce 76
	LE  reduce 76
	GE  reduce 76
	NE  reduce 76
	'='  reduce 76
	';'  reduce 76
	','  reduce 76
	'!'  reduce 76


state 129
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression '&' expression .  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'|'  shift 99
	START  reduce 78
	END  reduce 78
	THEN  reduce 78
	ELSE  reduce 78
	ELIF  reduce 78
	FI  reduce 78
	UNTIL  reduce 78
	STEP  reduce 78
	DO  reduce 78
	DONE  reduce 78
	']'  reduce 78
	'('  reduce 78
	')'  reduce 78
	'^'  reduce 78
	'*'  reduce 78
	'/'  reduce 78
	'%'  reduce 78
	'+'  reduce 78
	'-'  reduce 78
	'<'  reduce 78
	'>'  reduce 78
	LE  reduce 78
	GE  reduce 78
	NE  reduce 78
	'='  reduce 78
	'&'  reduce 78
	';'  reduce 78
	','  reduce 78
	'!'  reduce 78


state 130
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	expression : expression '|' expression .  (79)
	invocation : expression . '(' args ')'  (81)

	.  reduce 79


state 131
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)
	lvalue : lvalue '[' expression . ']'  (83)

	']'  shift 140
	'('  shift 85
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	.  error


state 132
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	expression : lvalue ASSIGN expression .  (80)
	invocation : expression . '(' args ')'  (81)

	.  reduce 80


state 133
	instructioninit : lvalue '#' expression . ';'  (49)
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	'('  shift 85
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	';'  shift 141
	.  error


state 134
	literalscomma : literalscomma ',' literal .  (42)

	.  reduce 42


state 135
	variables : variables ';' variable .  (26)

	.  reduce 26


state 136
	instructions : instructions . instructioninit  (44)
	instructioninit : IF expression THEN instructions . instructionfinal elifexp elseexp FI  (45)
	instructionfinal : .  (50)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	IF  shift 50
	FOR  shift 51
	REPEAT  shift 52
	STOP  shift 53
	RETURN  shift 54
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	ELSE  reduce 50
	ELIF  reduce 50
	FI  reduce 50

	literal  goto 41
	literals  goto 60
	instructioninit  goto 61
	instructionfinal  goto 142
	expression  goto 63
	lvalue  goto 64
	invocation  goto 65


state 137
	instructioninit : FOR expression UNTIL expression . STEP expression DO instructions instructionfinal DONE  (46)
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	STEP  shift 143
	'('  shift 85
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	.  error


state 138
	invocation : expression '(' args ')' .  (81)

	.  reduce 81


state 139
	args : args ',' . expression  (86)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 144
	lvalue  goto 78
	invocation  goto 65


state 140
	lvalue : lvalue '[' expression ']' .  (83)

	.  reduce 83


state 141
	instructioninit : lvalue '#' expression ';' .  (49)

	.  reduce 49


state 142
	instructioninit : IF expression THEN instructions instructionfinal . elifexp elseexp FI  (45)
	elifexp : .  (55)

	.  reduce 55

	elifexp  goto 145


state 143
	instructioninit : FOR expression UNTIL expression STEP . expression DO instructions instructionfinal DONE  (46)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 146
	lvalue  goto 78
	invocation  goto 65


state 144
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)
	args : args ',' expression .  (86)

	'('  shift 85
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	')'  reduce 86
	','  reduce 86


state 145
	instructioninit : IF expression THEN instructions instructionfinal elifexp . elseexp FI  (45)
	elifexp : elifexp . ELIF expression THEN instructions instructionfinal  (56)
	elseexp : .  (57)

	ELSE  shift 147
	ELIF  shift 148
	FI  reduce 57

	elseexp  goto 149


state 146
	instructioninit : FOR expression UNTIL expression STEP expression . DO instructions instructionfinal DONE  (46)
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	DO  shift 150
	'('  shift 85
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	.  error


state 147
	elseexp : ELSE . instructions instructionfinal  (58)
	instructions : .  (43)

	.  reduce 43

	instructions  goto 151


state 148
	elifexp : elifexp ELIF . expression THEN instructions instructionfinal  (56)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	.  error

	literal  goto 41
	literals  goto 60
	expression  goto 152
	lvalue  goto 78
	invocation  goto 65


state 149
	instructioninit : IF expression THEN instructions instructionfinal elifexp elseexp . FI  (45)

	FI  shift 153
	.  error


state 150
	instructioninit : FOR expression UNTIL expression STEP expression DO . instructions instructionfinal DONE  (46)
	instructions : .  (43)

	.  reduce 43

	instructions  goto 154


state 151
	instructions : instructions . instructioninit  (44)
	elseexp : ELSE instructions . instructionfinal  (58)
	instructionfinal : .  (50)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	IF  shift 50
	FOR  shift 51
	REPEAT  shift 52
	STOP  shift 53
	RETURN  shift 54
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	FI  reduce 50

	literal  goto 41
	literals  goto 60
	instructioninit  goto 61
	instructionfinal  goto 155
	expression  goto 63
	lvalue  goto 64
	invocation  goto 65


state 152
	elifexp : elifexp ELIF expression . THEN instructions instructionfinal  (56)
	expression : expression . '^' expression  (65)
	expression : expression . '*' expression  (66)
	expression : expression . '/' expression  (67)
	expression : expression . '%' expression  (68)
	expression : expression . '+' expression  (69)
	expression : expression . '-' expression  (70)
	expression : expression . '<' expression  (71)
	expression : expression . '>' expression  (72)
	expression : expression . GE expression  (73)
	expression : expression . LE expression  (74)
	expression : expression . NE expression  (75)
	expression : expression . '=' expression  (76)
	expression : expression . '&' expression  (78)
	expression : expression . '|' expression  (79)
	invocation : expression . '(' args ')'  (81)

	THEN  shift 156
	'('  shift 85
	'^'  shift 86
	'*'  shift 87
	'/'  shift 88
	'%'  shift 89
	'+'  shift 90
	'-'  shift 91
	'<'  shift 92
	'>'  shift 93
	LE  shift 94
	GE  shift 95
	NE  shift 96
	'='  shift 97
	'&'  shift 98
	'|'  shift 99
	.  error


state 153
	instructioninit : IF expression THEN instructions instructionfinal elifexp elseexp FI .  (45)

	.  reduce 45


state 154
	instructions : instructions . instructioninit  (44)
	instructioninit : FOR expression UNTIL expression STEP expression DO instructions . instructionfinal DONE  (46)
	instructionfinal : .  (50)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	IF  shift 50
	FOR  shift 51
	REPEAT  shift 52
	STOP  shift 53
	RETURN  shift 54
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	DONE  reduce 50

	literal  goto 41
	literals  goto 60
	instructioninit  goto 61
	instructionfinal  goto 157
	expression  goto 63
	lvalue  goto 64
	invocation  goto 65


state 155
	elseexp : ELSE instructions instructionfinal .  (58)

	.  reduce 58


state 156
	elifexp : elifexp ELIF expression THEN . instructions instructionfinal  (56)
	instructions : .  (43)

	.  reduce 43

	instructions  goto 158


state 157
	instructioninit : FOR expression UNTIL expression STEP expression DO instructions instructionfinal . DONE  (46)

	DONE  shift 159
	.  error


state 158
	instructions : instructions . instructioninit  (44)
	elifexp : elifexp ELIF expression THEN instructions . instructionfinal  (56)
	instructionfinal : .  (50)

	INTEGER  shift 38
	CHAR  shift 39
	IDENTIFIER  shift 49
	CCHAR  shift 40
	IF  shift 50
	FOR  shift 51
	REPEAT  shift 52
	STOP  shift 53
	RETURN  shift 54
	'('  shift 55
	'?'  shift 56
	'-'  shift 57
	'~'  shift 58
	'&'  shift 59
	ELSE  reduce 50
	ELIF  reduce 50
	FI  reduce 50

	literal  goto 41
	literals  goto 60
	instructioninit  goto 61
	instructionfinal  goto 160
	expression  goto 63
	lvalue  goto 64
	invocation  goto 65


state 159
	instructioninit : FOR expression UNTIL expression STEP expression DO instructions instructionfinal DONE .  (46)

	.  reduce 46


state 160
	elifexp : elifexp ELIF expression THEN instructions instructionfinal .  (56)

	.  reduce 56


State 84 contains 1 shift/reduce conflict.


81 terminals, 30 nonterminals
87 grammar rules, 161 states
